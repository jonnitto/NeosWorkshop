prototype(Jonnitto.Slider:Component.Items) < prototype(Neos.Neos:ContentComponent) {
    contentElement = false
    items = null
    namespace = null
    itemRenderer = null
    renderInBackendIfEmpty = false
    renderInBackendIfEmpty.@process = ${value ? node.context.inBackend : false}
    enableInBackend = true
    options = Neos.Fusion:DataStructure
    tagName = 'div'
    id = null
    itemOptions = Neos.Fusion:DataStructure
    fade = false
    jump = false

    // Internal
    count = ${Type.isArray(this.items) ? Array.length(this.items) : null}
    @if.render = ${(this.count || this.renderInBackendIfEmpty) && this.itemRenderer}


    renderer = Neos.Fusion:Component {
        @if.render = ${props.content || props.renderInBackendIfEmpty}
        @apply {
            spread_1 = ${props}
            spread_2 = Neos.Fusion:DataStructure {
                // Apply special settings for fade
                @if.fade = ${props.fade || props.jump}
                options = Neos.Fusion:DataStructure {
                    @apply.options = ${props.options}
                    fade = true
                    selectedAttraction = ${props.jump ? 1 : 0.2}
                    friction = ${props.jump ? 1 : 0.8}
                }
            }
        }
        renderer = afx`
            <Jonnitto.Slider:Component.Wrapper count={props.count} options={props.options} variant={props.namespace} enable={!props.enableInBackend}>
                <Neos.Fusion:Tag
                    tagName={props.tagName}
                    attributes.id={props.id}
                    attributes.class={[BEM.string('slider', null, ['count-' + props.count, props.namespace])]}
                    attributes.data-flickity={props.enableInBackend || node.context.live ? (props.options ? Json.stringify(props.options) : true) : false}
                >
                    <Neos.Fusion:Loop items={props.items} @children='itemRenderer'>
                        <Neos.Fusion:Renderer
                            type={props.itemRenderer}
                            element.slider={true}
                            element.namespace={props.namespace}
                            element.item={item}
                            element.itemKey={itemKey}
                            element.iterator={iterator}
                            element.itemOptions={props.itemOptions}
                        />
                    </Neos.Fusion:Loop>
                </Neos.Fusion:Tag>
            </Jonnitto.Slider:Component.Wrapper>
        `
    }
}
